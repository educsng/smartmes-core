{
	"info": {
		"_postman_id": "1b3976e0-2436-4a55-8956-307b2210ae92",
		"name": "Maintenance :: API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17949816"
	},
	"item": [
		{
			"name": "MaintenanceOrders",
			"item": [
				{
					"name": "get orders",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/maintenance-api/maintenance-orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenance-api",
								"maintenance-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "create order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reason\": \"Teste criação OS manutenção\",\r\n    \"equipmentId\": 123465,\r\n    \"priority\": \"LOW\",\r\n    \"type\": \"PREVENTIVE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/maintenance-api/maintenance-orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenance-api",
								"maintenance-orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "create incident",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reason\": \"Teste\",\r\n    \"equipmentId\": 123456\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/maintenance-api/maintenance-orders/incident",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenance-api",
								"maintenance-orders",
								"incident"
							]
						}
					},
					"response": []
				},
				{
					"name": "update order",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderStatus\": \"FINISHED\",\r\n    \"items\": [\r\n        {\r\n            \"description\": \"Teste update\",\r\n            \"employeeId\": 1,\r\n            \"shift\": \"MORNING\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/maintenance-api/maintenance-orders/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenance-api",
								"maintenance-orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update order - finish",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderStatus\": \"FINISHED\",\r\n    \"items\": [\r\n        {\r\n            \"description\": \"Teste finish\",\r\n            \"employeeId\": 1,\r\n            \"shift\": \"MORNING\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/maintenance-api/maintenance-orders/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenance-api",
								"maintenance-orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Employees",
			"item": [
				{
					"name": "findall technicians",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/maintenance-api/employees/technician",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenance-api",
								"employees",
								"technician"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "healthcheck",
			"item": [
				{
					"name": "healthcheck",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/maintenance-api/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"maintenance-api",
								"healthcheck"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{firebase.idToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"try {\r",
					"    let apikey = pm.globals.get(\"firebase-apikey\");\r",
					"    let username = pm.globals.get(\"firebase-username\");\r",
					"    let password = pm.globals.get(\"firebase-password\");\r",
					"    const response = await pm.sendRequest({\r",
					"        url: `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apikey}`,\r",
					"        method: \"POST\",\r",
					"        body: {\r",
					"            mode: 'raw',\r",
					"            raw: JSON.stringify({ \r",
					"                \"email\": `${username}`,\r",
					"                \"password\": `${password}`,\r",
					"                \"returnSecureToken\": true\r",
					"            })\r",
					"        }\r",
					"    });\r",
					"\r",
					"    let jsonResponse = response.json(), idToken = jsonResponse.idToken;\r",
					"    console.log(`>> Here is my firebase - idToken: ${idToken}`);\r",
					"\r",
					"    pm.globals.set('firebase.idToken', idToken);\r",
					"} catch (err) {\r",
					"    console.error(err);\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8081"
		}
	]
}