networks:
  smartmes:
    driver: bridge

volumes:
  pg_data: {}
  konga_data: {}
  mysql_data: {}

services:
  dbKong:
    stdin_open: true
    image: postgres:9.6
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      PGDATA: /var/lib/postgresql/data/pgdata
    tty: true
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - smartmes
    ports:
      - '5432:5432/tcp'
    volumes:
      - 'pg_data:/var/lib/postgresql/data/pgdata'
  
  kong-migrations:
    image: kong:1.5.1
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: dbKong
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: dbKong
    networks:
      - smartmes
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - dbKong

  kong:
    container_name: kong-gateway
    restart: on-failure
    image: kong:1.5.1
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: dbKong
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: dbKong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: debug
      KONG_SSL: "off"
    networks:
      - smartmes
    ports:
      - '8000:8000'
      - '8443:8443'
      - '8001:8001'
      - '8444:8444'
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - dbKong
      - kong-migrations

  konga:
    container_name: konga
    restart: on-failure
    image: pantsel/konga
    ports:
      - '1337:1337'
    networks:
      - smartmes
    depends_on:
      - kong
    volumes:
      - 'konga_data:/app/kongadata'

  db:
    image: mysql:8.0.20
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: db_smartmes
      TZ: America/Belem
    networks:
      - smartmes
    volumes:
      - 'mysql_data:/docker-entrypoint-initdb.d/'

  rabbitmq:
    image: rabbitmq:3.8-management
    container_name: rabbitmq-server
    ports:
      - "5672:5672"
      - "15672:15672"
      - "25672:25672"
    networks:
      - smartmes

  app-manufacturing:
    build:
      context: ./backend/apps/manufacturing-api
      dockerfile: Dockerfile
    image: smartmes-manufacturing
    container_name: smartmes-manufacturing
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - smartmes
    environment:
      - JAVA_OPTS=-Dspring.profiles.active=default
      - DB_HOST=db
    ports:
      - "8080:8080"
    privileged: true
    depends_on:
      - db

  app-maintenance:
    build:
      context: ./backend/apps/maintenance-api
      dockerfile: Dockerfile
    image: smartmes-maintenance
    container_name: smartmes-maintenance
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - smartmes
    environment:
      JAVA_OPTS: -Dspring.profiles.active=default
      DB_HOST: db
      RABBITMQ_HOST: rabbitmq
    ports:
      - "8081:8081"
    privileged: true
    depends_on:
      - db
      - rabbitmq
      - app-manufacturing
